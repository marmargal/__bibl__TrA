# Create your views here.
from django.contrib.auth import login, authenticate, logout
from django.contrib.auth.decorators import login_required
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth.forms import UserCreationForm
from django.db.models.query_utils import Q
from django.http.response import HttpResponseRedirect
from django.shortcuts import render_to_response
from django.shortcuts import render_to_response, get_object_or_404
from django.template import RequestContext
from django.template.context import RequestContext
from django.db.models import Q

from principal.populate import populateDatabase

from .models import Book


#creacion usuario
def populateDB(request):
    populateDatabase() 
    return render_to_response('populate.html')

def index(request): 
    return render_to_response('index.html')

def loadRS(request):
    books = Book.objects.all()
    return render_to_response('loadRS.html', {'datos':books}, context_instance = RequestContext(request))



#creacion usuario
def nuevo_usuario(request):
    if request.method=='POST':
        formulario= UserCreationForm(request.POST)
        if formulario.is_valid:
            formulario.save()
            return HttpResponseRedirect('/')
    else:
        formulario = UserCreationForm()
    return render_to_response('nuevousuario.html',{'formulario':formulario},context_instance=RequestContext(request))     


#Autenticacion usuarios
def ingresar(request):
    if not request.user.is_anonymous():
        return HttpResponseRedirect('/privado')
    if request.method == 'POST':
        formulario = AuthenticationForm(request.POST)
        if formulario.is_valid:
            usuario = request.POST['username']
            clave = request.POST['password']
            acceso = authenticate(username=usuario, password=clave)
            if acceso is not None:
                if acceso.is_active:
                    login(request, acceso)
                    return HttpResponseRedirect('/privado')
                else:
                    return render_to_response('noactivo.html', context_instance=RequestContext(request))
            else:
                return render_to_response('nousuario.html', context_instance=RequestContext(request))
    else: 
        formulario = AuthenticationForm()
    return render_to_response('ingresar.html', {'formulario':formulario}, context_instance=RequestContext(request))

#Acceso restringido
@login_required(login_url='/ingresar')
def privado(request):
    usuario = request.user
    return render_to_response('privado.html', {'usuario':usuario}, context_instance=RequestContext(request))

#cierre de sesion
@login_required(login_url='/ingresar')
def cerrar(request):
    logout(request)
    return HttpResponseRedirect('/')

def search(request):
    query = request.GET.get('q','')
    if query:
        qset = (
            Q(title__icontains=query) |
            Q(category__icontains=query) |
            Q(autor__icontains=query)
            )
        res = Book.objects.filter(qset).distinct()
    else:
        res = []
    return render_to_response('search.html', 
                              {'res':res, 'query':query})

    
    